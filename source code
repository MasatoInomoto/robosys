#include <linux/module.h>
#include <linux/fs.h>
#include <linux/cdev.h>
#include <linux/device.h>
#include <asm/uaccess.h>
#include <linux/io.h>

MODULE_AUTHOR("Masato Inomoto");
MODULE_DESCRIPTION("driver for LED control");
MODULE_LICENSE("GPL");
MODULE_VERSION("0.1");

static dev_t dev;
static struct cdev cdv;
static struct class *cls = NULL;

static volatile u32 *gpio_base = NULL;

static ssize_t led_write(struct file* flip, const char* buf, size_t count, loff_t* pos)
{
        char c;
        if(copy_from_user(&c,buf,sizeof(char)))
                return -EFAULT;
        
        if(c == '0')
                gpio_base[10] = 1 << 25;
        else if(c == '1')
                gpio_base[7] = 1 << 25;
       
        return 1;
}

static struct file_operations led_fops = {
         .owner = THIS_MODULE,
         .write = led_write
};
